name: Criar DMG do macOS Installer

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
      # --- CACHE COM CHAVE EXPL√çCITA ---
      - name: Tentar restaurar cache
        uses: actions/cache@v3
        id: cache-pkg
        with:
          path: /tmp/InstallAssistant.pkg
          key: installassistant-${{ github.sha }}

      - name: Baixar InstallAssistant.pkg
        if: steps.cache-pkg.outputs.cache-hit != 'true'
        run: |
          echo "‚ñ∂Ô∏è Iniciando download..."
          curl -L -o /tmp/InstallAssistant.pkg \
            "https://swcdn.apple.com/content/downloads/51/28/082-44432-A_4NJSZXK8G5/v10fo5dlwd50fja3qbnhj7z9tp1dx41vq2/InstallAssistant.pkg" \
            --progress-bar || {
              echo "‚ö†Ô∏è Download falhou, verificando cache parcial..."
              [ -f /tmp/InstallAssistant.pkg ] && exit 0 || exit 1
          }
          echo "‚úÖ Download completo"

      - name: Salvar no cache
        if: steps.cache-pkg.outputs.cache-hit != 'true' && always()
        uses: actions/cache/save@v3
        with:
          path: /tmp/InstallAssistant.pkg
          key: installassistant-${{ github.sha }}
          restore-keys: installassistant-

      # --- PROCESSAMENTO COM LOGS DETALHADOS ---
      - name: Instalar InstallAssistant.pkg
        run: |
          echo "üîß Instalando pacote..."
          sudo installer -pkg /tmp/InstallAssistant.pkg -target / -verbose
          echo "‚úÖ Instala√ß√£o conclu√≠da"

      - name: Localizar app de instala√ß√£o
        id: find-app
        run: |
          APP_PATH=$(find /Applications -maxdepth 1 -name "Install macOS*.app" -print -quit)
          [ -z "$APP_PATH" ] && { echo "::error::‚ùå App n√£o encontrado"; exit 1; }
          echo "APP_PATH=${APP_PATH}" >> $GITHUB_ENV
          echo "üìç App encontrado: ${APP_PATH}"

      - name: Montar SharedSupport.dmg
        run: |
          echo "‚è≥ Preparando montagem..."
          hdiutil eject "/Volumes/SharedSupport" -force 2>/dev/null || true
          
          echo "üîó Montando imagem..."
          hdiutil attach \
            "$APP_PATH/Contents/SharedSupport/SharedSupport.dmg" \
            -mountpoint "/Volumes/SharedSupport" \
            -nobrowse -noverify -noautoopen -owners on \
            -debug

          echo "üìå Verificando montagem..."
          if [ ! -d "/Volumes/SharedSupport" ]; then
            echo "::error::‚ùå Falha na montagem"
            diskutil list
            exit 1
          fi
          echo "‚úÖ Volume montado em /Volumes/SharedSupport"
          ls -la "/Volumes/SharedSupport"

      - name: Criar DMG final
        run: |
          echo "üèóÔ∏è Iniciando cria√ß√£o do DMG..."
          mkdir -p "$GITHUB_WORKSPACE/output"
          
          echo "‚è≥ Convertendo para DMG (isso pode demorar)..."
          hdiutil create \
            -volname "Install macOS" \
            -srcfolder "/Volumes/SharedSupport" \
            -format UDZO \
            -ov \
            -scrub \
            -fs HFS+ \
            -megabytes 16000 \
            "$GITHUB_WORKSPACE/output/Install_macOS.dmg" \
            -verbose

          echo "üîç Verificando DMG gerado..."
          if [ -f "$GITHUB_WORKSPACE/output/Install_macOS.dmg" ]; then
            DMG_SIZE=$(du -h "$GITHUB_WORKSPACE/output/Install_macOS.dmg" | cut -f1)
            echo "‚úÖ DMG criado com sucesso! Tamanho: $DMG_SIZE"
          else
            echo "::error::‚ùå Falha ao criar DMG"
            exit 1
          fi

      - name: Ejetar volume
        run: |
          echo "‚èèÔ∏è Ejetando volume..."
          hdiutil eject "/Volumes/SharedSupport" -force || true
          echo "‚úÖ Volume ejetado"

      # --- PUBLICA√á√ÉO ---
      - name: Upload do artefato
        uses: actions/upload-artifact@v4
        with:
          name: Install_macOS
          path: output/Install_macOS.dmg

      - name: Criar release
        uses: softprops/action-gh-release@v2
        with:
          files: output/Install_macOS.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}