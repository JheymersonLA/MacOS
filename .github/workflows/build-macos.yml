name: Criar DMG do macOS Installer

on:
  workflow_dispatch:

jobs:
  build-dmg:
    runs-on: macos-14-arm64

    steps:
      - name: Restaurar cache do InstallAssistant.pkg
        uses: actions/cache@v3
        id: cache-pkg
        with:
          path: /tmp/InstallAssistant.pkg
          key: install-assistant-pkg-v1

      - name: Baixar InstallAssistant.pkg (se necessário)
        if: steps.cache-pkg.outputs.cache-hit != 'true'
        run: |
          echo "Baixando InstallAssistant.pkg..."
          curl -L -o /tmp/InstallAssistant.pkg "https://swcdn.apple.com/content/downloads/51/28/082-44432-A_4NJSZXK8G5/v10fo5dlwd50fja3qbnhj7z9tp1dx41vq2/InstallAssistant.pkg"

      - name: Instalar o InstallAssistant.pkg
        run: |
          sudo installer -pkg /tmp/InstallAssistant.pkg -target /

      - name: Encontrar caminho do Install macOS.app
        id: find-app
        run: |
          APP_PATH=$(find /Applications -name "Install macOS*.app" -maxdepth 1 | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "Install macOS.app não encontrado!"
            exit 1
          fi
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "Encontrado: $APP_PATH"

      - name: Criar DMG a partir do .app
        run: |
          VOLUME_NAME="macOSInstaller"
          mkdir -p dmg-temp
          cp -R "$APP_PATH" dmg-temp/
          hdiutil create -volname "$VOLUME_NAME" -srcfolder dmg-temp -ov -format UDZO macOSInstaller.dmg

      - name: Fazer upload do DMG como artefato
        uses: actions/upload-artifact@v4
        with:
          name: macOSInstaller
          path: macOSInstaller.dmg

      - name: Criar release e enviar DMG
        uses: softprops/action-gh-release@v2
        with:
          files: macOSInstaller.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
